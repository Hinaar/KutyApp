<?xml version="1.0" encoding="utf-8" ?>
<pages:PopupPage
             xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
             xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:validator="clr-namespace:KutyApp.Client.Xam.Behaviors.Validation"
             xmlns:animations="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
             xmlns:myControls="clr-namespace:KutyApp.Client.Xam.Controls"
             xmlns:XLabControls="clr-namespace:XLabs.Forms.Controls;assembly=XLabs.Forms"
             xmlns:prism="clr-namespace:Prism.Mvvm;assembly=Prism.Forms" 
             prism:ViewModelLocator.AutowireViewModel="True"
             xmlns:local="clr-namespace:KutyApp.Client.Xam"
             x:Class="KutyApp.Client.Xam.Views.RegisterPopupPage">
    <pages:PopupPage.Animation>
        <animations:ScaleAnimation 
            PositionIn="Bottom"
            PositionOut="Center"
            ScaleIn="1"
            ScaleOut="0.7"
            DurationIn="700"
            EasingIn="BounceOut"/>
    </pages:PopupPage.Animation>
    <ContentPage.Content>
        <ScrollView HorizontalOptions="Center" VerticalOptions="Center">
            <Frame x:Name="FrameContainer" Margin="0" HorizontalOptions="CenterAndExpand" BackgroundColor="#32B6A4"
                   CornerRadius="5" BorderColor="Black" Padding="0">
                <StackLayout IsClippedToBounds="True" Padding="5, 30, 5, 5" Spacing="3" HorizontalOptions="Fill" x:Name="PageStack">
                   
                    <myControls:ExtraEntry Text="{Binding UserName, Mode=TwoWay}" 
                                           BackgroundColor="Transparent" 
                                           MyBackgroundColor="{StaticResource ExtraEntryBackgroundColor}" 
                                           TextColor="White"
                                           FontAttributes="Bold"
                                           CornerRadius="10" 
                                           BorderColor="White"
                                           BorderThickness="2"
                                           Margin="5"
                                           HorizontalOptions="Fill"
                                           x:Name="UsernameEntry"
                                           HorizontalTextAlignment="Center"
                                           Placeholder="{x:Static local:Resources.Localization.Texts.Name}"
                                           PlaceholderColor="#D9D0D0D0">
                        <Entry.Behaviors>
                            <validator:ValidatorBaseBehavior x:Name="NameValidator" IsRequired="True"/>
                        </Entry.Behaviors>
                        <Entry.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Reference NameValidator}, Path=IsValid}"
                                     TargetType="myControls:ExtraEntry"
                                     Value="False">
                                <Setter Property="MyBackgroundColor" Value="{StaticResource ErrorBackgroundColor}" />
                                <Setter Property="BorderColor" Value="Red" />
                                <Setter Property="BorderThickness" Value="5" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Reference NameValidator}, Path=IsValid}"
                                     TargetType="myControls:ExtraEntry"
                                     Value="True">
                                <Setter Property="MyBackgroundColor" Value="{StaticResource ExtraEntryBackgroundColor}" />
                                <Setter Property="BorderColor" Value="White" />
                                <Setter Property="BorderThickness" Value="2" />
                            </DataTrigger>
                        </Entry.Triggers>
                    </myControls:ExtraEntry>
                    <Label Margin="10, -5, 10, 0" Text="{x:Static local:Resources.Localization.Texts.NameRequired}" TextColor="Red" FontSize="Micro" IsVisible="{Binding Source={x:Reference NameValidator}, Path=IsValid, Converter={StaticResource InvertBooleanConverter}}" />

                    <myControls:ExtraEntry Text="{Binding Email, Mode=TwoWay}" 
                                           BackgroundColor="Transparent" 
                                           MyBackgroundColor="{StaticResource ExtraEntryBackgroundColor}" 
                                           TextColor="White"
                                           FontAttributes="Bold"
                                           CornerRadius="10" 
                                           BorderColor="White"
                                           BorderThickness="2"
                                           Margin="5"
                                           HorizontalOptions="Fill"
                                           x:Name="EmailEntry"
                                           HorizontalTextAlignment="Center"
                                           Placeholder="email@email.com"
                                           PlaceholderColor="#D9D0D0D0"
                                           Keyboard="Email">
                        <Entry.Behaviors>
                            <validator:ValidatorBaseBehavior x:Name="EmailValidator" IsRequired="True"/>
                        </Entry.Behaviors>
                        <Entry.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Reference EmailValidator}, Path=IsValid}"
                                     TargetType="myControls:ExtraEntry"
                                     Value="False">
                                <Setter Property="MyBackgroundColor" Value="{StaticResource ErrorBackgroundColor}" />
                                <Setter Property="BorderColor" Value="Red" />
                                <Setter Property="BorderThickness" Value="5" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Reference EmailValidator}, Path=IsValid}"
                                     TargetType="myControls:ExtraEntry"
                                     Value="True">
                                <Setter Property="MyBackgroundColor" Value="{StaticResource ExtraEntryBackgroundColor}" />
                                <Setter Property="BorderColor" Value="White" />
                                <Setter Property="BorderThickness" Value="2" />
                            </DataTrigger>
                        </Entry.Triggers>
                    </myControls:ExtraEntry>
                    <Label Margin="10, -5, 10, 0" Text="{x:Static local:Resources.Localization.Texts.NameRequired}" TextColor="Red" FontSize="Micro" IsVisible="{Binding Source={x:Reference EmailValidator}, Path=IsValid, Converter={StaticResource InvertBooleanConverter}}" />

                    <myControls:ExtraEntry Text="{Binding Password, Mode=TwoWay}" 
                                           BackgroundColor="Transparent" 
                                           MyBackgroundColor="{StaticResource ExtraEntryBackgroundColor}" 
                                           TextColor="White"
                                           FontAttributes="Bold"
                                           CornerRadius="10" 
                                           BorderColor="White"
                                           BorderThickness="2"
                                           Margin="5"
                                           HorizontalOptions="Fill"
                                           x:Name="PasswordEntry"
                                           HorizontalTextAlignment="Center"
                                           Placeholder="{x:Static local:Resources.Localization.Texts.Password}"
                                           PlaceholderColor="#D9D0D0D0"
                                           IsPassword="True">
                        <Entry.Behaviors>
                            <validator:ValidatorBaseBehavior x:Name="PasswordValidator" IsRequired="True"/>
                        </Entry.Behaviors>
                        <Entry.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Reference PasswordValidator}, Path=IsValid}"
                                     TargetType="myControls:ExtraEntry"
                                     Value="False">
                                <Setter Property="MyBackgroundColor" Value="{StaticResource ErrorBackgroundColor}" />
                                <Setter Property="BorderColor" Value="Red" />
                                <Setter Property="BorderThickness" Value="5" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Reference PasswordValidator}, Path=IsValid}"
                                     TargetType="myControls:ExtraEntry"
                                     Value="True">
                                <Setter Property="MyBackgroundColor" Value="{StaticResource ExtraEntryBackgroundColor}" />
                                <Setter Property="BorderColor" Value="White" />
                                <Setter Property="BorderThickness" Value="2" />
                            </DataTrigger>
                        </Entry.Triggers>
                    </myControls:ExtraEntry>
                    <Label Margin="10, -5, 10, 0" Text="{x:Static local:Resources.Localization.Texts.NameRequired}" TextColor="Red" FontSize="Micro" IsVisible="{Binding Source={x:Reference PasswordValidator}, Path=IsValid, Converter={StaticResource InvertBooleanConverter}}" />

                    <myControls:ExtraEntry Text="{Binding PasswordConfirm, Mode=TwoWay}" 
                                           BackgroundColor="Transparent" 
                                           MyBackgroundColor="{StaticResource ExtraEntryBackgroundColor}" 
                                           TextColor="White"
                                           FontAttributes="Bold"
                                           CornerRadius="10" 
                                           BorderColor="White"
                                           BorderThickness="2"
                                           Margin="5"
                                           HorizontalOptions="Fill"
                                           x:Name="PasswordConfirmEntry"
                                           HorizontalTextAlignment="Center"
                                           Placeholder="{x:Static local:Resources.Localization.Texts.PasswordConfirm}"
                                           PlaceholderColor="#D9D0D0D0"
                                           IsPassword="True">
                        <Entry.Behaviors>
                            <validator:SameTextValidatorBehavior
                                x:Name="PasswordConfirmValidator" 
                                IsRequired="True" 
                                CompareTo="{Binding Source={x:Reference PasswordEntry}, Path=Text}"
                                ShownMessage="{x:Static local:Resources.Localization.Texts.REQUIRED}"
                                ShownCompareMessage="{x:Static local:Resources.Localization.Texts.ConfirmPassword}"/>
                        </Entry.Behaviors>
                        <Entry.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Reference PasswordConfirmValidator}, Path=IsValid}"
                                     TargetType="myControls:ExtraEntry"
                                     Value="False">
                                <Setter Property="MyBackgroundColor" Value="{StaticResource ErrorBackgroundColor}" />
                                <Setter Property="BorderColor" Value="Red" />
                                <Setter Property="BorderThickness" Value="5" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Reference PasswordConfirmValidator}, Path=IsValid}"
                                     TargetType="myControls:ExtraEntry"
                                     Value="True">
                                <Setter Property="MyBackgroundColor" Value="{StaticResource ExtraEntryBackgroundColor}" />
                                <Setter Property="BorderColor" Value="White" />
                                <Setter Property="BorderThickness" Value="2" />
                            </DataTrigger>
                        </Entry.Triggers>
                    </myControls:ExtraEntry>
                    <Label Margin="10, -5, 10, 0" Text="{Binding Source={x:Reference PasswordConfirmValidator}, Path=ErrorMessage}" TextColor="Red" FontSize="Micro" IsVisible="{Binding Source={x:Reference PasswordConfirmValidator}, Path=IsValid, Converter={StaticResource InvertBooleanConverter}}" />

                    <myControls:ExtraEntry Text="{Binding PhoneNumber, Mode=TwoWay}" 
                                           BackgroundColor="Transparent" 
                                           MyBackgroundColor="{StaticResource ExtraEntryBackgroundColor}" 
                                           TextColor="White"
                                           FontAttributes="Bold"
                                           CornerRadius="10" 
                                           BorderColor="White"
                                           BorderThickness="2"
                                           Margin="5"
                                           HorizontalOptions="Fill"
                                           x:Name="PhoneNumberEntry"
                                           HorizontalTextAlignment="Center"
                                           Placeholder="+36001234567"
                                           PlaceholderColor="#D9D0D0D0"
                                           IsPassword="False">
                    </myControls:ExtraEntry>
                    
                    <Button
                        BorderColor="Black" 
                        BorderRadius="5"
                        BorderWidth="1"
                        Margin="100, 5"
                        CornerRadius="5"
                        BackgroundColor="#7dbbe6"
                        Text="{x:Static local:Resources.Localization.Texts.Register}"
                        x:Name="RegisterButton" 
                        Command="{Binding RegisterCommand}"
                        IsEnabled="False">
                        <Button.Triggers>
                            <MultiTrigger TargetType="Button">
                                <MultiTrigger.Conditions>
                                    <BindingCondition Binding="{Binding Source={x:Reference NameValidator}, Path=IsValid}" Value="True" />
                                    <BindingCondition Binding="{Binding Source={x:Reference EmailValidator}, Path=IsValid}" Value="True" />
                                    <BindingCondition Binding="{Binding Source={x:Reference PasswordValidator}, Path=IsValid}" Value="True" />
                                    <BindingCondition Binding="{Binding Source={x:Reference PasswordConfirmValidator}, Path=IsValid}" Value="True" />
                                    <BindingCondition Binding="{Binding UserName, Converter={StaticResource IsTextEmptyConverter}}" Value="False" />
                                    <BindingCondition Binding="{Binding Email, Converter={StaticResource IsTextEmptyConverter}}" Value="False" />
                                    <BindingCondition Binding="{Binding Password, Converter={StaticResource IsTextEmptyConverter}}" Value="False" />
                                    <BindingCondition Binding="{Binding PasswordConfirm, Converter={StaticResource IsTextEmptyConverter}}" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiTrigger>
                        </Button.Triggers>
                    </Button>

                    <Label x:Name="ErrorLabel" Margin="10, 5" HorizontalTextAlignment="Center" Text="{Binding ErrorMessage}" TextColor="Red" FontSize="Micro" IsVisible="{Binding HasError}" />
                    <ActivityIndicator x:Name="LoadingActivityIndicator" IsEnabled="True" IsVisible="{Binding IsBusy}" IsRunning="{Binding IsBusy}" VerticalOptions="CenterAndExpand" HorizontalOptions="Center" />
                </StackLayout>
            </Frame>
        </ScrollView>
    </ContentPage.Content>
</pages:PopupPage>