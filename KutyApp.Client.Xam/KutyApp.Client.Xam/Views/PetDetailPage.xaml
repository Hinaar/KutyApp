<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:validator="clr-namespace:KutyApp.Client.Xam.Behaviors.Validation"
             xmlns:local="clr-namespace:KutyApp.Client.Xam"
             xmlns:converters="clr-namespace:KutyApp.Client.Xam.Converters"
             xmlns:myControls="clr-namespace:KutyApp.Client.Xam.Controls"
             x:Class="KutyApp.Client.Xam.Views.PetDetailPage"
             BackgroundColor="DarkSlateGray">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:InvertBooleanConverter x:Key="InvertBooleanConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <StackLayout>
            <Grid BackgroundColor="Black" x:Name="FullImageLayout" IsVisible="False" HeightRequest="10000" Opacity="0">
            <myControls:ZoomImage  Source="{Binding ImagePath}" Aspect="AspectFit">
                <myControls:ZoomImage.GestureRecognizers>
                    <TapGestureRecognizer NumberOfTapsRequired="2" Tapped="HideOrShowFullImage" />
                </myControls:ZoomImage.GestureRecognizers>
            </myControls:ZoomImage>
                
            </Grid>
            <ScrollView x:Name="BasicLayout" IsVisible="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="2*" />
                    </Grid.RowDefinitions>

                    <Grid VerticalOptions="FillAndExpand" Grid.Row="0" HorizontalOptions="Fill">
                        <Frame CornerRadius="5" BorderColor="White" HasShadow="True" BackgroundColor="Transparent" Padding="0" Margin="5" IsClippedToBounds="True" >
                            <Image Aspect="Fill" Source="{Binding PetImageSource}">
                                <Image.GestureRecognizers>
                                    <SwipeGestureRecognizer Direction="Left, Right"  Swiped="OpenImageSelection"/>
                                    <TapGestureRecognizer NumberOfTapsRequired="2" Tapped="HideOrShowFullImage" />
                                </Image.GestureRecognizers>
                            </Image>
                        </Frame>
                    </Grid>
                    <StackLayout Grid.Row="1">
                        <StackLayout Orientation="Horizontal" x:Name="PictureButtonsLayout" IsVisible="False" HorizontalOptions="CenterAndExpand">
                            <Button IsEnabled="{Binding IsOnline}" Text="{x:Static local:Resources.Localization.Texts.TakePhotoButtonText}" Command="{Binding TakePhotoCommand}" CornerRadius="5" BackgroundColor="{StaticResource MainButtonBackgroundColor}" TextColor="White"/>
                            <Button IsEnabled="{Binding IsOnline}" Text="{x:Static local:Resources.Localization.Texts.PickPohotoButtonText}" Command="{Binding PickPhotoCommand}" CornerRadius="5" BackgroundColor="{StaticResource MainButtonBackgroundColor}" TextColor="White"/>
                        </StackLayout>
                        <!-- Name -->
                        <myControls:ExtraEntry Text="{Binding Name, Mode=TwoWay}" BackgroundColor="Transparent" MyBackgroundColor="{StaticResource ExtraEntryBackgroundColor}" TextColor="White" FontAttributes="Bold" CornerRadius="10" BorderColor="White" BorderThickness="2" Margin="5">
                            <Entry.Behaviors>
                                <validator:ValidatorBaseBehavior x:Name="NameValidator" IsRequired="True"/>
                            </Entry.Behaviors>
                            <Entry.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Reference NameValidator}, Path=IsValid}"
                                     TargetType="myControls:ExtraEntry"
                                     Value="False">
                                    <Setter Property="MyBackgroundColor" Value="{StaticResource ErrorBackgroundColor}" />
                                    <Setter Property="BorderColor" Value="Red" />
                                    <Setter Property="BorderThickness" Value="5" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Source={x:Reference NameValidator}, Path=IsValid}"
                                     TargetType="myControls:ExtraEntry"
                                     Value="True">
                                    <Setter Property="MyBackgroundColor" Value="{StaticResource ExtraEntryBackgroundColor}" />
                                    <Setter Property="BorderColor" Value="White" />
                                    <Setter Property="BorderThickness" Value="2" />
                                </DataTrigger>
                            </Entry.Triggers>
                        </myControls:ExtraEntry>
                        <Label Margin="5, -5" Text="{x:Static local:Resources.Localization.Texts.NameRequired}" TextColor="Red" FontSize="Micro" IsVisible="{Binding Source={x:Reference NameValidator}, Path=IsValid, Converter={StaticResource InvertBooleanConverter}}" />
                        <!--Chipnumber-->
                        <myControls:ExtraEntry Text="{Binding ChipNumber, Mode=TwoWay}" BackgroundColor="Transparent" MyBackgroundColor="{StaticResource ExtraEntryBackgroundColor}" TextColor="White" FontAttributes="Bold" CornerRadius="10" BorderColor="White" BorderThickness="2" Margin="5">
                            <Entry.Behaviors>
                                <validator:ValidatorBaseBehavior x:Name="ChipnumberValidator" IsRequired="True"/>
                            </Entry.Behaviors>
                            <Entry.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Reference ChipnumberValidator}, Path=IsValid}"
                                     TargetType="myControls:ExtraEntry"
                                     Value="False">
                                    <Setter Property="MyBackgroundColor" Value="{StaticResource ErrorBackgroundColor}" />
                                    <Setter Property="BorderColor" Value="Red" />
                                    <Setter Property="BorderThickness" Value="5" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Source={x:Reference ChipnumberValidator}, Path=IsValid}"
                                     TargetType="myControls:ExtraEntry"
                                     Value="True">
                                    <Setter Property="MyBackgroundColor" Value="{StaticResource ExtraEntryBackgroundColor}" />
                                    <Setter Property="BorderColor" Value="White" />
                                    <Setter Property="BorderThickness" Value="2" />
                                </DataTrigger>
                            </Entry.Triggers>
                        </myControls:ExtraEntry>
                        <Label Margin="5, -5" Text="{x:Static local:Resources.Localization.Texts.ChipNumberRequired}" TextColor="Red" FontSize="Micro" IsVisible="{Binding Source={x:Reference ChipnumberValidator}, Path=IsValid, Converter={StaticResource InvertBooleanConverter}}" />

                        <Picker ItemsSource="{Binding GenderValues}" TextColor="White" SelectedItem="{Binding Gender, Mode=TwoWay}" Margin="5" BackgroundColor="{StaticResource ExtraEntryBackgroundColor}"/>
                        <DatePicker Date="{Binding BirthDate, Mode=TwoWay}" />
                        <StackLayout Orientation="Horizontal" Padding="10, 0">
                            <Button Text="{x:Static local:Resources.Localization.Texts.SaveButtonText}" Command="{Binding AddOrEditPetCommand}" 
                                    BackgroundColor="{StaticResource MainButtonBackgroundColor}" TextColor="White" CornerRadius="5"
                                    HorizontalOptions="StartAndExpand"
                                    IsEnabled="{Binding IsOnline}"/>
                            <Button Text="{x:Static local:Resources.Localization.Texts.DeleteButtonText}" Command="{Binding DeletePetCommand}" VerticalOptions="End"
                                    BackgroundColor="{StaticResource ErrorBackgroundColor}" TextColor="White" CornerRadius="5" 
                                    HorizontalOptions="EndAndExpand"
                                    IsEnabled="{Binding IsOnline}"/>
                        </StackLayout>

                    </StackLayout>
                </Grid>

            </ScrollView>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>